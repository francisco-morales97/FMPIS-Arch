#!/bin/sh

# Definición de variables
GREEN="\033[0;32m"
RED="\033[0;31m"
BOLD="\033[1m"
NC="\033[0m"

# Inicio del script
[ ! -f "$1" ] && printf "${RED}${BOLD}Debes colocar el archivo 'tracks'${NC}\n" && exit

TRACK=0
TOTAL="$(wc -l < $1)"

# Proceso de conversión de canciones

# Ordeno las canciones por orden de descarga y reemplazo los espacios por 
# signos de grado para que, al ejecutar el loop, los nombres de cada cancion
# sean tratados como una sola linea
SONGS=$(ls *.opus --time=creation -r | sed "s/ /°/g")
# La línea de abajo es en caso de usar youtube-dl
# SONGS=$(ls *.m4a --time=creation -r | sed "s/ /°/g")

for SONG in $SONGS; do
  TRACK="$(printf "%02d" "$(expr $TRACK + 1)")"
  SONGNAME="$(printf "$SONG" | sed "s/°/ /g;s/ \[.*\.//g;s/opus$/°$TRACK/g" | awk -F ° '{print $2,$1}' | sed "s/\s/ - /")"
  printf "Renombrando '$(printf $SONG | sed "s/°/ /g;s/ \[.*//g")'\n"
  # Revierto los signos de grado a espacios para que se reconozca el 
  # nombre original del archivo y pueda convertirlo de formato
  mv "$(printf $SONG | sed 's/°/ /g')" "$SONGNAME.opus"

  # Las lineas de abajo son en caso de usar youtube-dl en lugar de yt-dlp

  # SONGNAME="$(printf "$SONG" | sed "s/°/ /g;s/-.*\.//g;s/m4a$/°$TRACK/g" | awk -F ° '{print $2,$1}' | sed "s/\s/ - /")"
  # printf "Convirtiendo '$(printf $SONG | sed "s/°/ /g;s/-.*//g")'\n"

  # Revierto los signos de grado a espacios para que se reconozca el 
  # nombre original del archivo y pueda convertirlo de formato
  # ffmpeg -nostdin -loglevel 16 -i "$(printf $SONG | sed "s/°/ /g")" "$SONGNAME.opus"
done

# Proceso de etiquetado de canciones

# Metadatos generales
EXIT=false
echo
printf "Nombre del album:\n"; read -r ALBUM
printf "Nombre del artista:\n"; read -r ARTIST
printf "Año de publicación:\n"; read -r DATE
while [ $EXIT = false ]; do
  printf "¿Cuántos generos posee el álbum? [1/2/3]\n"; read ANSWER
  case $ANSWER in
    1)
      printf "Género del álbum:\n"; read -r GENRE
      EXIT=true
      ;;
    2)
      printf "Primer género del álbum:\n"; read -r GENRE
      printf "Segundo género del álbum:\n"; read -r GENRE2
      EXIT=true
      ;;
    3)
      printf "Primer género del álbum:\n"; read -r GENRE
      printf "Segundo género del álbum:\n"; read -r GENRE2
      printf "Tercer género del álbum:\n"; read -r GENRE3
      EXIT=true
      ;;
    *)
      echo
      printf "${BOLD}${RED}Esa opción no es válida${NC}\n"
      ;;
  esac
done
EXIT=false
while [ $EXIT = false ]; do
  printf "¿El album posee discos múltiples? [y/n]\n"; read ANSWER
  case $ANSWER in
    y)
      printf "Número de disco:\n"; read -r DISCNUMBER
      EXIT=true
      ;;
    n)
      EXIT=true
      ;;
    *)
      echo
      printf "${RED}${BOLD}Esa opción no es válida${NC}\n"
      ;;
  esac
done
echo
TRACK=0
 
# Aplicar metadatos
if [ -n "$GENRE2" ]; then                         # Si el álbum tiene 2 generos
  for SONG in *.opus; do
    NAME="$(printf "$SONG" | awk '{print substr($0, index($0, $3))}' | sed 's/\.opus$//g')"
    TRACK="$(printf "$(expr $TRACK + 1)")"
    printf "Escribiendo metadatos de '$SONG'\n"
    opustags "$SONG" --in-place -D

    # Si el álbum tiene más de un disco
    if [ -n "$DISCNUMBER" ]; then
      opustags "$SONG" --in-place -a "TITLE=$NAME" -a "ALBUM=$ALBUM" -a "ARTIST=$ARTIST" -a "DATE=$DATE" -a "GENRE=$GENRE" -a "GENRE=$GENRE2" -a "TRACKNUMBER=$TRACK" -a "TOTALTRACKS=$TOTAL" -a "DISCNUMBER=$DISCNUMBER"
    else
      opustags "$SONG" --in-place -a "TITLE=$NAME" -a "ALBUM=$ALBUM" -a "ARTIST=$ARTIST" -a "DATE=$DATE" -a "GENRE=$GENRE" -a "GENRE=$GENRE2" -a "TRACKNUMBER=$TRACK" -a "TOTALTRACKS=$TOTAL"
    fi
  done
elif [ -n "$GENRE3" ]; then                       # Si el álbum tiene 3 generos
  for SONG in *.opus; do
    NAME="$(printf "$SONG" | awk '{print substr($0, index($0, $3))}' | sed 's/\.opus$//g')"
    TRACK="$(printf "$(expr $TRACK + 1)")"
    printf "Escribiendo metadatos de '$SONG'\n"
    opustags "$SONG" --in-place -D

    # Si el álbum tiene más de un disco
    if [ -n "$DISCNUMBER" ]; then
      opustags "$SONG" --in-place -a "TITLE=$NAME" -a "ALBUM=$ALBUM" -a "ARTIST=$ARTIST" -a "DATE=$DATE" -a "GENRE=$GENRE" -a "GENRE=$GENRE2" -a "GENRE=$GENRE3" -a "TRACKNUMBER=$TRACK" -a "TOTALTRACKS=$TOTAL" -a "DISCNUMBER=$DISCNUMBER"
    else
      opustags "$SONG" --in-place -a "TITLE=$NAME" -a "ALBUM=$ALBUM" -a "ARTIST=$ARTIST" -a "DATE=$DATE" -a "GENRE=$GENRE" -a "GENRE=$GENRE2" -a "GENRE=$GENRE3" -a "TRACKNUMBER=$TRACK" -a "TOTALTRACKS=$TOTAL"
    fi
  done
else                                          # Si el álbum tiene 1 solo genero
  for SONG in *.opus; do
    NAME="$(printf "$SONG" | awk '{print substr($0, index($0, $3))}' | sed 's/\.opus$//g')"
    TRACK="$(printf "$(expr $TRACK + 1)")"
    printf "Escribiendo metadatos de '$SONG'\n"
    opustags "$SONG" --in-place -D

    # Si el álbum tiene más de un disco
    if [ -n "$DISCNUMBER" ]; then
      opustags "$SONG" --in-place -a "TITLE=$NAME" -a "ALBUM=$ALBUM" -a "ARTIST=$ARTIST" -a "DATE=$DATE" -a "GENRE=$GENRE" -a "TRACKNUMBER=$TRACK" -a "TOTALTRACKS=$TOTAL" -a "DISCNUMBER=$DISCNUMBER"
    else
      opustags "$SONG" --in-place -a "TITLE=$NAME" -a "ALBUM=$ALBUM" -a "ARTIST=$ARTIST" -a "DATE=$DATE" -a "GENRE=$GENRE" -a "TRACKNUMBER=$TRACK" -a "TOTALTRACKS=$TOTAL"
    fi
  done
fi

# Diálogo para remover archivos sobrantes

EXIT=false
while [ $EXIT = false ]; do
  echo
  printf "¿Desea remover los archivos sobrantes? [y/n]\n" && read ANSWER
  case "$ANSWER" in
    y)
      rm tracks
      # La linea de abajo es en caso de usar youtube-dl
      # rm *.m4a tracks
      echo
      printf "${GREEN}${BOLD}¡Proceso Finalizado!${NC}\n"
      EXIT=true
      ;;
    n)
      echo
      printf "${GREEN}${BOLD}¡Proceso finalizado!${NC}\n"
      EXIT=true
      ;;
    *)
      echo
      printf "${RED}${BOLD}Esa opción no es válida${NC}\n"
      ;;
  esac
done
